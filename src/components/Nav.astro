---
const links = [
{ href: '/#home', label: 'Home' },
{ href: '/#projects', label: 'Projects' },
{ href: '/#about', label: 'About' },
{ href: '/#writing', label: 'Writing' },
{ href: '/#contact', label: 'Contact' }
];
---
<nav class="nav" id="site-nav">
<div class="container nav-inner">
<a class="logo" href="/#home">Your Name</a>
<div style="display:flex; gap:16px; align-items:center;">
{links.map(l => <a href={l.href} class="nav-link">{l.label}</a>)}
</div>
</div>
</nav>
<script>
// Morph-on-scroll
const nav = document.getElementById('site-nav');
const sentinel = document.createElement('div');
sentinel.style.position = 'absolute';
sentinel.style.top = '0';
sentinel.style.height = '1px';
document.body.prepend(sentinel);
const io = new IntersectionObserver(([e]) => {
if (e.boundingClientRect.y < -2 || !e.isIntersecting) nav.classList.add('scrolled');
else nav.classList.remove('scrolled');
});
io.observe(sentinel);


// Smooth scroll with offset for sticky nav; works from any path
const offset = () => nav.getBoundingClientRect().height + 8;
function scrollToHash(hash) {
const id = (hash || '#home').replace('#','');
const el = document.getElementById(id);
if (!el) return;
const top = el.getBoundingClientRect().top + window.scrollY - offset();
window.history.pushState({}, '', '/#' + id);
window.scrollTo({ top, behavior: 'smooth' });
}
document.querySelectorAll('a.nav-link, .logo').forEach(a => {
a.addEventListener('click', (e) => {
const url = new URL(a.href);
if (url.hash) { e.preventDefault(); scrollToHash(url.hash); }
});
});
// Handle direct loads with a hash
if (location.hash) setTimeout(() => scrollToHash(location.hash), 0);
</script>